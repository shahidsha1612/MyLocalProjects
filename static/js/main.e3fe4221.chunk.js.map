{"version":3,"sources":["Redux/Types.js","card.js","Redux/Actions.js","contexts/ThemeContext.js","styles/navStyle.js","PageContent.js","Redux/Reducers.js","Redux/Store.js","Playlist.js","NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["ADD_PLAYLIST","data","songD","useStyles","makeStyles","root","minWidth","width","height","padding","marginLeft","flexGrow","faby","marginTop","search","borderRadius","backgroundColor","outerTheme","createMuiTheme","palette","secondary","main","connect","state","playlist","Playlist","dsipatch","addPlaylist","playlistName","type","payload","props","React","useState","anchorEl","setAnchorEl","setSearchTerm","setPlaylistName","playlistObj","useDispatch","handleClick","map","obj","name","event","currentTarget","open","setOpen","handleClickOpen","evt","handleDialogClose","handleClose","handlePlaylistName","target","value","handleAddToPlaylist","index","currentPlaylistName","id","artist","console","log","classes","className","placeholder","onChange","SongList","Card","variant","CardContent","src","theme","Fab","aria-controls","aria-haspopup","onClick","size","color","aria-label","Menu","keepMounted","Boolean","onClose","MenuItem","Dialog","aria-labelledby","DialogContent","TextField","autoFocus","margin","label","fullWidth","DialogActions","Button","ThemeContext","createContext","ThemeProvider","isDarkMode","Mode","toogleTheme","bind","this","setState","Provider","children","Component","styles","menuButton","marginRight","spacing","title","root2","titlePlay","PageContent","context","style","contextType","initialState","playlistReducer","action","store","createStore","Toogle","NavBar","left","anchor","toggleDrawer","key","AppBar","position","Toolbar","IconButton","edge","Drawer","clsx","list","fullList","role","onKeyDown","List","text","ListItem","button","ListItemIcon","ListItemText","primary","Divider","Switch","Typography","path","render","withStyles","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3fe4221.chunk.js","sourcesContent":["export const ADD_PLAYLIST = 'ADD_PLAYLIST'","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport './SongLi.css';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { AppBar, DialogContent } from '@material-ui/core';\r\nimport { addPlaylist } from \"./Redux/Actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { useDispatch } from 'react-redux';\r\n\r\nlet data = {\r\n    songD: [\r\n        {\r\n            \"id\": \"0\",\r\n            \"name\": \"Morgun\",\r\n            \"artist\": \"Morgun Halbeard\"\r\n        },\r\n        {\r\n            \"id\": \"1\",\r\n            \"name\": \"Cahra\",\r\n            \"artist\": \"Cahra Kohen\"\r\n        },\r\n        {\r\n            \"id\": \"2\",\r\n            \"name\": \"Claudia\",\r\n            \"artist\": \"Claudia Conelly\"\r\n        },\r\n        {\r\n            \"id\": \"3\",\r\n            \"name\": \"Moria\",\r\n            \"artist\": \"Moria Ferrige\"\r\n        }\r\n    ]\r\n}\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n        width: '30%',\r\n        height: '2px',\r\n        padding: '60px',\r\n        marginLeft: '600px',\r\n        flexGrow: 1,\r\n    },\r\n    faby: {\r\n\r\n        marginTop: '-230px',\r\n        marginLeft: '540px',\r\n\r\n\r\n    },\r\n    search: {\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        flexGrow: 1,\r\n        borderRadius: 'theme.shape.borderRadius',\r\n        backgroundColor: 'theme.palette.common.white',\r\n\r\n    },\r\n\r\n});\r\nconst outerTheme = createMuiTheme({\r\n    palette: {\r\n        secondary: {\r\n            main: \"#000000\"\r\n        }\r\n    }\r\n});\r\nfunction OutlinedCard(props) {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [playlistName, setPlaylistName] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const playlistObj = props.playlist;\r\n    const PlayListNamesToAdd = playlistObj.map(function (obj) {\r\n        return obj.name;\r\n    });\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = (evt) => {\r\n        setOpen(true);\r\n\r\n    };\r\n\r\n    const handleDialogClose = () => {\r\n        setOpen(false);\r\n        setPlaylistName(\"\");\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handlePlaylistName = (event) => {\r\n        setPlaylistName(event.target.value);\r\n\r\n\r\n    };\r\n    const handleAddToPlaylist = (index, currentPlaylistName, id, artist) => {\r\n\r\n        if (index === id) {\r\n            return console.log(currentPlaylistName);\r\n        }\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"users\">\r\n            <input className={classes.search} placeholder=\"search Song\" onChange={(event) => {\r\n                setSearchTerm(event.target.value);\r\n            }}>\r\n\r\n            </input>\r\n            {\r\n\r\n                data.songD.map((SongList, index) => (\r\n                    <Card className={classes.root} variant=\"outlined\" >\r\n                        <div className=\"songs\" key={index}>\r\n                            <CardContent id={SongList.id}>\r\n                                <div className=\"sp1\"><img className=\"albums\" src=\"https://www.theweeknd.com/sites/g/files/aaj5321/f/styles/suzuki_breakpoints_image_tablet_sq/public/release/201911/2ac634c217fba52b18e776e98f1d2c82889c59ed.jpg?itok=NkrCSZxp\" /></div>\r\n                                <h3 className=\"sp2\">{SongList.name}</h3>\r\n                                <div className=\"sp3\">{SongList.artist}</div>\r\n                                <div className={classes.faby} >\r\n                                    <ThemeProvider theme={outerTheme}>\r\n                                        <Fab aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} size=\"small\" color=\"secondary\" aria-label=\"add\" className=\"fab\" >\r\n                                            <AddIcon />\r\n                                        </Fab>\r\n                                    </ThemeProvider>\r\n\r\n                                    <Menu\r\n                                        id=\"simple-menu\"\r\n                                        anchorEl={anchorEl}\r\n                                        keepMounted\r\n                                        open={Boolean(anchorEl)}\r\n                                        onClose={handleClose}\r\n                                    >\r\n\r\n\r\n                                        <MenuItem onClick={handleClickOpen}>Create Playlist</MenuItem>\r\n                                        <Dialog\r\n                                            open={open}\r\n                                            onClose={handleClose}\r\n                                            aria-labelledby=\"form-dialog-title\"\r\n                                        >\r\n                                            <DialogContent>\r\n                                                <TextField\r\n                                                    autoFocus\r\n                                                    margin=\"dense\"\r\n                                                    id=\"name\"\r\n                                                    label=\"Enter Playlist Name\"\r\n                                                    type=\"text\"\r\n                                                    onChange={handlePlaylistName}\r\n                                                    value={playlistName}\r\n                                                    fullWidth\r\n                                                />\r\n                                            </DialogContent>\r\n                                            <DialogActions>\r\n                                                <Button onClick={handleDialogClose} color=\"primary\">\r\n                                                    Cancel\r\n          </Button>\r\n                                                <Button color=\"primary\" onClick={() => {\r\n                                                    props.addPlaylist(playlistName);\r\n                                                    handleDialogClose()\r\n                                                }\r\n\r\n\r\n\r\n                                                }>\r\n                                                    Create\r\n          </Button>\r\n\r\n                                            </DialogActions>\r\n                                        </Dialog>\r\n\r\n\r\n\r\n                                        {\r\n                                            playlistObj ? (\r\n                                                playlistObj.map((obj) => {\r\n                                                    let currentPlaylistName = SongList.name;\r\n                                                    let id = SongList.id;\r\n                                                    let artist = SongList.artist;\r\n                                                    return <MenuItem id={index} onClick={handleAddToPlaylist(index, currentPlaylistName, id, artist)}>Add to {obj.name} </MenuItem>\r\n                                                }\r\n                                                )) : (\r\n                                                    <p>Empty</p>\r\n                                                )\r\n                                        }\r\n                                    </Menu>\r\n\r\n\r\n\r\n                                </div>\r\n\r\n\r\n                            </CardContent>\r\n                        </div>\r\n\r\n                    </Card>\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n\r\n}\r\nconst mapDispatchToProps = dsipatch => {\r\n\r\n    return {\r\n        addPlaylist: playlistName => dsipatch(addPlaylist(playlistName))\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        playlist: state.Playlist\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OutlinedCard);","import { ADD_PLAYLIST } from './Types'\r\n\r\n\r\nexport const addPlaylist = (playlistName) => {\r\n    return {\r\n        type: ADD_PLAYLIST,\r\n        payload: playlistName\r\n    }\r\n}","import React, { Component, createContext } from 'react';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nexport class ThemeProvider extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isDarkMode: false,\r\n            Mode: \"LightMode\"\r\n        };\r\n        this.toogleTheme = this.toogleTheme.bind(this);\r\n    }\r\n    toogleTheme() {\r\n        this.setState({ isDarkMode: !this.state.isDarkMode });\r\n        this.setState({ Mode: this.state.isDarkMode ? \" DarkMode\" : \"LightMode\" });\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <ThemeContext.Provider value={{ ...this.state, toogleTheme: this.toogleTheme }}>\r\n                {this.props.children}\r\n            </ThemeContext.Provider>\r\n        );\r\n    }\r\n}","const styles = theme => (\r\n    {\r\n\r\n        root: {\r\n            flexGrow: 1,\r\n            backgroundColor: '#000',\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n            flexGrow: 1,\r\n        },\r\n        root2: {\r\n            flexGrow: 1,\r\n            backgroundColor: 'pink',\r\n        },\r\n        titlePlay: {\r\n            marginLeft: '40px',\r\n            marginTop: '10px',\r\n\r\n\r\n        }\r\n    }\r\n);\r\nexport default styles;","import React, { Component } from 'react';\r\nimport { ThemeContext } from \"./contexts/ThemeContext\";\r\nclass PageContent extends Component {\r\n\r\n    static contextType = ThemeContext;\r\n    render() {\r\n        const { isDarkMode } = this.context;\r\n\r\n        const styles = {\r\n            backgroundColor: isDarkMode ? \"white\" : \"#1a1a1a\",\r\n            height: \"100vh\",\r\n            width: \"100wh\"\r\n        }\r\n        return <div style={styles}>{this.props.children}</div>;\r\n    }\r\n}\r\nexport default PageContent;","import { ADD_PLAYLIST } from './Types'\r\n\r\nconst initialState = {\r\n\r\n    Playlist: [\r\n\r\n\r\n\r\n    ]\r\n}\r\n\r\nconst playlistReducer = (state = initialState, action) => {\r\n\r\n\r\n\r\n    switch (action.type) {\r\n        case ADD_PLAYLIST: return {\r\n            ...state,\r\n            Playlist: [...state.Playlist, { name: action.payload }]\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default playlistReducer;","import { createStore } from 'redux';\r\nimport playlistReducer from \"./Reducers\";\r\n\r\nconst store = createStore(playlistReducer)\r\n\r\n\r\nexport default store;","import React, { Component, useState } from 'react';\r\nimport AppBar from './NavBar';\r\nimport PageContent from \"./PageContent\";\r\nimport './App.css';\r\nimport { ThemeProvider } from \"./contexts/ThemeContext\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./Redux/Store\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport './SongLi.css';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport songD from './MOCK_DATA.json';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { DialogContent } from '@material-ui/core';\r\nimport { addPlaylist } from \"./Redux/Actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n        width: '30%',\r\n        height: '2px',\r\n        padding: '60px',\r\n        marginLeft: '600px',\r\n        flexGrow: 1,\r\n    },\r\n    faby: {\r\n\r\n        marginTop: '-230px',\r\n        marginLeft: '540px',\r\n\r\n\r\n    },\r\n    search: {\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        flexGrow: 1,\r\n        borderRadius: 'theme.shape.borderRadius',\r\n        backgroundColor: 'theme.palette.common.white',\r\n\r\n    },\r\n\r\n});\r\nconst outerTheme = createMuiTheme({\r\n    palette: {\r\n        secondary: {\r\n            main: \"#000000\"\r\n        }\r\n    }\r\n});\r\nfunction Playlist(props) {\r\n\r\n\r\n\r\n    const classes = useStyles();\r\n    const [Toogle, setToogle] = useState(false);\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <div className=\"App\">\r\n                <ThemeProvider>\r\n                    <PageContent >\r\n\r\n                        {\r\n                            Toogle ? (\r\n                                <h1>empty playlist</h1>\r\n                            ) :\r\n                                (\r\n\r\n                                    songD.map((SongList, index) => (\r\n                                        <Card className={classes.root} variant=\"outlined\" >\r\n                                            <div className=\"songs\" key={index}>\r\n                                                <CardContent>\r\n                                                    <div className=\"sp1\"><img className=\"albums\" src=\"https://www.theweeknd.com/sites/g/files/aaj5321/f/styles/suzuki_breakpoints_image_tablet_sq/public/release/201911/2ac634c217fba52b18e776e98f1d2c82889c59ed.jpg?itok=NkrCSZxp\" /></div>\r\n                                                    <h3 className=\"sp2\">{SongList.name}</h3>\r\n                                                    <div className=\"sp3\">{SongList.artist}</div>\r\n                                                    <div className={classes.faby} >\r\n\r\n                                                    </div>\r\n\r\n\r\n                                                </CardContent>\r\n                                            </div>\r\n\r\n                                        </Card>\r\n                                    ))\r\n\r\n                                )\r\n                        }\r\n\r\n\r\n                    </PageContent>\r\n                </ThemeProvider>\r\n            </div>\r\n        </Provider>\r\n    )\r\n\r\n\r\n\r\n}\r\nexport default Playlist;","import React, { Component, useState, createContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\n\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport clsx from 'clsx';\r\nimport { Switch, withStyles } from '@material-ui/core';\r\nimport { ThemeContext } from \"./contexts/ThemeContext\";\r\nimport styles from \"./styles/navStyle\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter, Link, Route } from 'react-router-dom';\r\nimport Playlist from './Playlist';\r\n\r\nclass NavBar extends Component {\r\n\r\n    //needs to update playlist\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { left: false };\r\n\r\n\r\n\r\n    }\r\n    static contextType = ThemeContext;\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        // const [state, setState] = useState(\r\n        //     { left: false });\r\n\r\n\r\n\r\n        const anchor = \"left\";\r\n\r\n        const { isDarkMode, toogleTheme, Mode } = this.context;\r\n        const { classes } = this.props;\r\n        const playlistObj = this.props.playlist;\r\n\r\n        // drawList = [\"Playlist1\", \"Playlist2\", \"Playlist3\"];\r\n        // const updateList = (playlistName) => {\r\n        //     drawList = [...drawList, playlistName];\r\n        // };\r\n\r\n        const list = (anchor) => (\r\n            <div\r\n                className={clsx(classes.list, {\r\n                    [classes.fullList]: anchor === \"top\" || anchor === \"bottom\"\r\n                })}\r\n                role=\"presentation\"\r\n                onClick={toggleDrawer(anchor, false)}\r\n                onKeyDown={toggleDrawer(anchor, false)}\r\n            >\r\n                <h3 className={classes.titlePlay}>PlayList</h3>\r\n                <List>\r\n                    {playlistObj.map((text, index) => (\r\n\r\n                        <ListItem button key={text.name}>\r\n                            <ListItemIcon>\r\n                                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                            </ListItemIcon>\r\n\r\n                            <ListItemText primary={text.name} />\r\n\r\n\r\n                        </ListItem>\r\n\r\n                    ))}\r\n                </List>\r\n                <Divider />\r\n            </div >\r\n        );\r\n        const toggleDrawer = (anchor, open) => (event) => {\r\n            if (\r\n                event.type === \"keydown\" &&\r\n                (event.key === \"Tab\" || event.key === \"Shift\")\r\n            ) {\r\n                return;\r\n            }\r\n\r\n            this.setState({ ...this.state.left, [anchor]: open });\r\n        };\r\n        return (\r\n\r\n            <div className={classes.root}>\r\n\r\n                <AppBar position=\"static\" className={isDarkMode ? classes.root2 : classes.root} >\r\n\r\n                    < Toolbar >\r\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" >\r\n                            <MenuIcon onClick={toggleDrawer(anchor, true)} />\r\n                            <Drawer\r\n                                anchor={anchor}\r\n                                open={this.state[anchor]}\r\n                                onClose={toggleDrawer(anchor, false)}\r\n                            >\r\n                                {list(anchor)}\r\n                            </Drawer>\r\n                        </IconButton>\r\n                        <Switch onChange={toogleTheme} />\r\n                        <Typography>{Mode}</Typography>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            MUSIC-DEMO-PLAYER\r\n          </Typography>\r\n                        <Button color=\"inherit\">Login</Button>\r\n                    </Toolbar>\r\n\r\n                </AppBar>\r\n                <Route path='/Playlist' render={() => <Playlist />} />\r\n\r\n            </div >\r\n\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        playlist: state.Playlist\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(withStyles(styles)(NavBar));\r\n\r\n","import './App.css';\nimport Card from './card';\nimport AppBar from './NavBar';\nimport { ThemeProvider } from \"./contexts/ThemeContext\";\nimport { Component } from 'react';\nimport PageContent from \"./PageContent\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/Store\";\nimport Playlist from './Playlist';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n\n    return (\n      <BrowserRouter>\n        <Provider store={store}>\n          <div className=\"App\">\n            <ThemeProvider>\n              <PageContent >\n                <AppBar />\n\n\n                <Card />\n              </PageContent>\n            </ThemeProvider>\n\n          </div>\n        </Provider>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}